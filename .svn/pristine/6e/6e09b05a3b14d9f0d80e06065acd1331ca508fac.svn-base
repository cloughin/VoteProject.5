using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Web.UI;
using DB.Vote;

namespace Vote.Admin
{
  [PageInitializers]
  public partial class UpdateOfficesPage : SecureAdminPage
  {
    #region Private

    #region DataItem object
    
    // Base class for tab classes to inherit from
    private abstract class OfficesDataItem : DataItemBase
    {
      protected readonly UpdateOfficesPage Page;

      protected OfficesDataItem(UpdateOfficesPage page, string groupName)
        : base(groupName)
      {
        Page = page;
      }

      protected override string GetCurrentValue()
      {
        throw new NotImplementedException();
      }

      protected override bool Update(object newValue)
      {
        throw new NotImplementedException();
      }
    }

    #endregion DataItem object

    private void SetCredentialMessage()
    {
      switch (UserSecurityClass)
      {
        case MasterSecurityClass:
          CredentialMessage.InnerHtml = IsSuperUser
            ? "Your sign-in credentials allow any offices to be updated."
            : "Your sign-in credentials allow any federal, state, county or local offices to be updated.";
          break;

        case StateAdminSecurityClass:
          CredentialMessage.InnerHtml = "Your sign-in credentials permit any " +
            States.GetName(StateCode) + " offices to be updated.";
          break;

        case CountyAdminSecurityClass:
          CredentialMessage.InnerHtml = "Your sign-in credentials permit only " +
            Counties.GetFullName(StateCode, CountyCode) +
            " offices to be updated.";
          break;

        case LocalAdminSecurityClass:
          CredentialMessage.InnerHtml = "Your sign-in credentials permit only " +
            LocalDistricts.GetFullName(StateCode, CountyCode, LocalCode) +
            " offices to be updated.";
          ChangeJurisdictionButton.Visible = false;
          break;

        default:
          throw new VoteException("Unexpected UserSecurityClass: " +
            UserSecurityClass);
      }
    }

    private void SetSubHeading()
    {
      switch (AdminPageLevel)
      {
        //case AdminPageLevel.President:
        //case AdminPageLevel.PresidentTemplate:
        //case AdminPageLevel.Federal:
        //  H2.InnerHtml = States.GetName(StateCode) + ", All States";
        //  break;

        case AdminPageLevel.State:
          H2.InnerHtml = "State Offices for " + States.GetName(StateCode);
          break;

        case AdminPageLevel.County:
          H2.InnerHtml = "County Offices for " +
            Counties.GetFullName(StateCode, CountyCode);
          break;

        case AdminPageLevel.Local:
          H2.InnerHtml = "Local Offices for " +
            LocalDistricts.GetFullName(StateCode, CountyCode, LocalCode);
          break;

        case AdminPageLevel.Unknown:
          H2.InnerHtml = "No Jurisdiction Selected";
          break;
      }
    }

    #endregion Private

    #region Protected

    #region ReSharper disable

    // ReSharper disable MemberCanBePrivate.Global
    // ReSharper disable VirtualMemberNeverOverriden.Global
    // ReSharper disable UnusedMember.Global

    #endregion ReSharper disable

    internal override IEnumerable<string> NonStateCodesAllowed { get { return new string[0]; } }

    #region ReSharper restore

    // ReSharper restore UnusedMember.Global
    // ReSharper restore VirtualMemberNeverOverriden.Global
    // ReSharper restore MemberCanBePrivate.Global

    #endregion ReSharper restore

    #endregion Protected

    #region Event handlers and overrides

    protected void Page_Load(object sender, EventArgs e)
    {
      //Page.IncludeCss("/admin/css/UpdateOffices.css");

      const string title = "Update Offices";
      Page.Title = title;
      H1.InnerHtml = title;

      SetSubHeading();
      SetCredentialMessage();

      if (AdminPageLevel == AdminPageLevel.Unknown)
        UpdateControls.Visible = false;
    }

    #endregion Event handlers and overrides
  }
}