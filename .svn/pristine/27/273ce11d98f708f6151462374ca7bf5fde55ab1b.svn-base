using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using MySql.Data.MySqlClient;
using Vote;

namespace DB.Vote
{
  public partial class OfficesOfficials
  {
    public static string GetIncumbentOfficeKeyByPoliticianKey(
      string politicianKey, int commandTimeout = -1)
    {
      var cmdText = "SELECT OfficesOfficials.OfficeKey" +
        " FROM OfficesOfficials,Offices" +
        " WHERE OfficesOfficials.PoliticianKey=@PoliticianKey" +
        "  AND OfficesOfficials.OfficeKey = Offices.OfficeKey" +
        " ORDER BY OfficesOfficials.DataLastUpdated DESC";
      cmdText = VoteDb.InjectSqlLimit(cmdText, 1);
      var cmd = VoteDb.GetCommand(cmdText, commandTimeout);
      VoteDb.AddCommandParameter(cmd, "PoliticianKey", politicianKey);
      var table = FillTable(cmd, OfficesOfficialsTable.ColumnSet.OfficeKey);
      return table.Count == 0 ? null : table[0].OfficeKey;
    }

    public static string GetIncumbentOfficeKeyByRunningMateKey(
      string runningMateKey, int commandTimeout = -1)
    {
      var cmdText = "SELECT OfficesOfficials.OfficeKey" +
        " FROM OfficesOfficials,Offices" +
        " WHERE OfficesOfficials.RunningMateKey=@RunningMateKey" +
        "  AND OfficesOfficials.OfficeKey = Offices.OfficeKey" +
        " ORDER BY OfficesOfficials.DataLastUpdated DESC";
      cmdText = VoteDb.InjectSqlLimit(cmdText, 1);
      var cmd = VoteDb.GetCommand(cmdText, commandTimeout);
      VoteDb.AddCommandParameter(cmd, "RunningMateKey", runningMateKey);
      var table = FillTable(cmd, OfficesOfficialsTable.ColumnSet.OfficeKey);
      return table.Count == 0 ? null : table[0].OfficeKey;
    }

    public static IEnumerable<string> GetIncumbentsByState(string stateCode, string countyCode = "",
      string localCode = "", int commandTimeout = -1)
    {
      const string cmdText = "SELECT PoliticianKey,RunningMateKey FROM OfficesOfficials" +
        " WHERE StateCode IN (@StateCode,'') AND CountyCode=@CountyCode AND LocalCode=@LocalCode";
      var cmd = VoteDb.GetCommand(cmdText, commandTimeout);
      var table = new DataTable();
      using (var cn = VoteDb.GetOpenConnection())
      {
        cmd.Connection = cn;
        VoteDb.AddCommandParameter(cmd, "StateCode", stateCode);
        VoteDb.AddCommandParameter(cmd, "CountyCode", countyCode);
        VoteDb.AddCommandParameter(cmd, "LocalCode", localCode);
        DbDataAdapter adapter = new MySqlDataAdapter(cmd as MySqlCommand);
        adapter.Fill(table);
      }
      return table.Rows.Cast<DataRow>().Select(row => row.PoliticianKey())
        .Union(table.Rows.Cast<DataRow>().Select(row => row.RunningMateKey()))
        .Where(k => stateCode.IsEqIgnoreCase(Politicians.GetStateCodeFromKey(k)));
    }
  }
}