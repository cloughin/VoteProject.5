using System;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using DB.Vote;
using Vote.Reports;

namespace Vote
{
  public partial class OfficialsNew : CacheablePage
  {
    protected OfficialsNew()
    {
      No404OnUrlNormalizeError = true;
    }

    #region Caching support

    protected override string GetCacheKey()
    {
      return UrlManager.GetStateCodeFromHostName() + "." + QueryReport + "." +
        QueryState + "." + QueryCounty + "." + QueryLocal;
    }

    protected override string GetCacheType()
    {
      return "Officials";
    }

    #endregion Caching support

    private string _StateCode;
    private string _CountyCode;
    private string _LocalCode;
    private ElectoralClass _ElectoralClass;

    private const string TitleTag = "{0} | Pictures, Bios, Position Statements and Social Media Links | {1}";

    private const string MetaDescriptionTag = "{0} with pictures, bios, position statements and social media links";

    //private const string TitleTagAllStatesDomain =
    //  "Federal Elected Officials Pictures, Bios, Social Media and Issue Positions";

    //private const string MetaDescriptionAllStatesDomain =
    //  "Federal elected officials pictures, bios, social media and positions on the issues; plus your customized sample ballot.";

    ////private const string MetaKeywordsAllStatesDomain =
    ////  "sample ballot, sample ballots, vote, voter, ballot, election, voting, candidates";

    //private const string TitleTagSingleStateDomain =
    //  "{0} Elected Officials Pictures, Bios, Social Media and Issue Positions";

    //private const string MetaDescriptionSingleStateDomain =
    //  "{0} and Federal elected officials pictures, bios, social media and positions on the issues; plus your customized sample ballot.";

    //private const string MetaKeywordsSingleStateDomain =
    //  "{0} sample ballot, {0} sample ballots, {0} vote, {0} voter, {0} ballot, {0} election, {0} voting, {0} candidates";

    //private void PopulateMetaTags()
    //{
    //  if (DomainData.IsValidStateCode) // Single state
    //  {
    //    Title = TitleTagSingleStateDomain;
    //    MetaDescription = MetaDescriptionSingleStateDomain;
    //    //MetaKeywords = MetaKeywordsSingleStateDomain;
    //  }
    //  else
    //  {
    //    Title = TitleTagAllStatesDomain;
    //    MetaDescription = MetaDescriptionAllStatesDomain;
    //    //MetaKeywords = MetaKeywordsAllStatesDomain;
    //  }

    //  var stateName = StateCache.GetStateName(_StateCode);
    //  Title = string.Format(Title, stateName);
    //  MetaDescription = string.Format(MetaDescription,
    //    stateName);
    //  MetaKeywords = string.Format(MetaKeywords, stateName);
    //  if (string.IsNullOrEmpty(UrlManager.CurrentQuerySiteId)) return;
    //  ForVotersLink.HRef = UrlManager.GetForVotersPageUri(_StateCode)
    //    .ToString();
    //}

    private void AnalyzeElectoralClass()
    {
      string titleContentDescription;
      var metaContentLocation = string.Empty;

      switch (_ElectoralClass)
      {
        case ElectoralClass.USPresident:
          titleContentDescription = "Current US President and Vice President";
          break;

        case ElectoralClass.USSenate:
          titleContentDescription = "Current US Senators";
          break;

        case ElectoralClass.USHouse:
          titleContentDescription = "Current US House Members";
          break;

        case ElectoralClass.USGovernors:
          titleContentDescription = "Current State Governors and Lieutenant Governors";
          break;

        case ElectoralClass.State:
          titleContentDescription = string.Format("Current {0} Elected Representatives",
            StateCache.GetStateName(_StateCode));
          break;

        case ElectoralClass.County:
          titleContentDescription = "Current County Representatives";
          metaContentLocation = CountyCache.GetCountyName(_StateCode, _CountyCode) + ", " +
            StateCache.GetStateName(_StateCode);
          break;

        case ElectoralClass.Local:
          titleContentDescription = "Current Local District Representatives";
          metaContentLocation = LocalDistricts.GetName(_StateCode, _CountyCode, _LocalCode) + ", " + 
            CountyCache.GetCountyName(_StateCode, _CountyCode) + ", " + 
            StateCache.GetStateName(_StateCode);
          break;

        default:
          titleContentDescription = "Elected Representatives";
          break;
      }

      var metaContentDescription = titleContentDescription;
      if (metaContentLocation != string.Empty)
        metaContentDescription += ", " + metaContentLocation;

      PageHeading.MainHeadingText = titleContentDescription;
      Title = string.Format(TitleTag, metaContentDescription, Master.SiteName);
      MetaDescription = string.Format(MetaDescriptionTag, metaContentDescription);
    }

    protected void Page_Load(object sender, EventArgs e)
    {
      if (Report.SignedInReportUser != ReportUser.Public)
      {
        this.IncludeCss("~/css/MainCommon.css");
        this.IncludeCss("~/css/SecondaryCommon.css");
        this.IncludeCss("~/css/All.css");
        this.IncludeCss("~/css/Officials.css");
      }

      if (HasUrlError)
      {
        InnerContent.Controls.Clear();
        var p = new HtmlP().AddTo(InnerContent, "not-found-error");
        new LiteralControl("We could not show the information you requested: " +
          UrlError).AddTo(p);
        return;
      }

      _StateCode = QueryReport;
      _CountyCode = string.Empty;
      _LocalCode = string.Empty;
      if (string.IsNullOrWhiteSpace(_StateCode))
        _StateCode = QueryState;
      if (StateCache.IsValidStateCode(_StateCode))
      {
        _CountyCode = QueryCounty;
        _LocalCode = QueryLocal;
      }

      _ElectoralClass = Offices.GetElectoralClass(_StateCode, _CountyCode,
        _LocalCode);

      AnalyzeElectoralClass();
      //PopulateMetaTags();
      Control report;
      if (Report.SignedInReportUser != ReportUser.Public)
        report = OfficialsReport.GetReport(Report.SignedInReportUser, _StateCode, _CountyCode,
        _LocalCode);
      else
        report = OfficialsReportResponsive.GetReport(_StateCode, _CountyCode, _LocalCode);
      report.AddTo(ReportPlaceHolder);
    }
  }
}